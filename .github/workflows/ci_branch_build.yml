name: CI Build Tests on All Branches Except For Master

on:
  push:
    branches-ignore:
      - master

jobs:
  pushCiBuildDockerImage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set Variables With Build Info
        id: job_info
        run: |
          curl -v -L -u runner:${{ secrets.GITHUB_TOKEN }} -o job_info.json https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${{ github.run_id }}/jobs
          echo "branch_name=$(echo ${GITHUB_REF##*/})" >> $GITHUB_OUTPUT
          echo "repo_name=$(echo ${GITHUB_REPOSITORY##*/})" >> $GITHUB_OUTPUT
      - name: Capture environment variables
        run: printenv
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build slack-notification App
        uses: docker/build-push-action@v6
        with:
          context: .
          file: build/docker/Dockerfile
          load: true
          platforms: linux/amd64
          tags: |
            ${{ steps.job_info.outputs.repo_name }}:latest
            ${{ steps.job_info.outputs.repo_name }}:${{ steps.job_info.outputs.branch_name }}
      - name: Test gitactions-slack-notification App
        run: |
          docker run --rm \
            --env GITHUB_ACTION=${{ github.action }} \
            --env GITHUB_ACTOR=${{ github.actor }} \
            --env GITHUB_EVENT_NAME=${{ github.event_name }} \
            --env GITHUB_REF="${{ github.ref }}" \
            --env GITHUB_REPOSITORY="${{ github.repository }}" \
            --env GITHUB_WORKFLOW="${{ github.workflow }}" \
            --env SLACK_CHANNEL=platform-activity \
            --env SLACK_COLOR="#3278BD" \
            --env SLACK_INCOMING_WEBHOOK=${{ secrets.SLACK_INCOMING_WEBHOOK }} \
            --env SLACK_MESSAGE="Testing gitactions slack notification" \
            --env SLACK_TITLE="Test ${{ steps.job_info.outputs.repo_name }} on commit sha ${{ github.sha }}" \
            --env SLACK_USERNAME=${{ steps.job_info.outputs.repo_name }} \
            ${{ steps.job_info.outputs.repo_name }}:${{ steps.job_info.outputs.branch_name }}
  logPullCiBuildDockerImage:
    needs: pushCiBuildDockerImage
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Generate log file
        run: |
          curl -v -L -u runner:${{ secrets.GITHUB_TOKEN }} -o job_info.json https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${{ github.run_id }}/jobs
          curl -v -L -u runner:${{ secrets.GITHUB_TOKEN }} -o build_logs.txt $(cat job_info.json | jq --raw-output '.jobs | .[0] | .url')/logs
      - name: Persisting log
        id: persisting_log
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: workflow_log
          path: build_logs.txt
